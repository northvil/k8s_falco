driver:
  enabled: true
collectors:
  kubernetes:
    enabled: true
falco:
  json_output: true
  json_include_output_property: true
  json_include_tags_property: true
  kubernetes:
    enabled: true
    api_url: "https://kubernetes.default.svc:443"
    ssl_certificate: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token  
  http_output:
    enabled: true
    url: "http://falcosidekick:2801/"
    user_agent: "falcosecurity/falcosidekick"
    insecure: true
    ca_cert: ""
    ca_bundle: ""
    ca_path: "/etc/falco/certs/"
    mtls: false
    client_cert: "/etc/falco/certs/client/client.crt"
    client_key: "/etc/falco/certs/client/client.key"
    echo: false
    compress_uploads: false
    keep_alive: false
    plugins:
      - name: k8smeta
        library_path: libk8smeta.so
        init_config: ""
        open_params: "grpc://k8s-metacollector.metacollector.svc.cluster.local:45000"
falcoctl:
  config:
    artifact:
      install:
        refs:
          - falco-rules:3  # Правила Falco
          - ghcr.io/falcosecurity/plugins/plugin/k8smeta:0.2.1
customRules:
  detect-cat-in-container.yaml: |-
      - rule: Terminal Shell with cat Command in Container
        desc: Detect when someone executes cat command inside a container
        condition: >
          evt.type = execve 
          and container 
          and proc.name = "cat"
          and container.name contains "_prod_"
        output: >
          CRITICAL: Cat command executed in a container 
          (user=%user.name uid=%user.uid process=%proc.name
          command=%proc.cmdline container_id=%container.id 
          container_name=%container.name k8s_ns=%k8s.ns.name)
        priority: CRITICAL
        tags: [security, terminal, exec]